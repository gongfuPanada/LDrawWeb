attribute vec3 position;
attribute vec4 vertexColor;
attribute vec3 normal;

uniform mat4 projection;
uniform mat4 rotation;

varying vec4 color;
varying vec3 lightWeighing;

vec3 lightPos = vec3(0.0, -1.0, 0.0);

vec3 ambientColor = vec3(0.2, 0.2, 0.2);
vec3 directionalColor = vec3(0.8, 0.8, 0.8);

void main(void) {
	vec4 transformedNormal = projection * vec4(normal.xyz, 1.0); 
	float directionalLightWeighing = max(dot(transformedNormal.xyz, lightPos), 0.0);
	  
	vec4 npos = rotation * (vec4(position.x, position.y, position.z, 1.0) * 0.3) + vec4(0.0, 0.0, -100.0, 0.0);
	gl_Position = projection * npos;
	
	color = vertexColor;
	//lightWeighing = ambientColor + directionalColor * directionalLightWeighing;
	lightWeighing = vec3(1.0, 1.0, 1.0);
}